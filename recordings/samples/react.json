{
  "v": 1,
  "events": [
    {
      "type": "content",
      "text": "function TodoList({ items }) {\n  const [todos, setTodos] = React.useState(items);\n  const [newTodo, setNewTodo] = React.useState('');\n\n  const addTodo = () => {\n    if (!newTodo.trim()) return;\n    setTodos([...todos, { id: Date.now(), text: newTodo }]);\n    setNewTodo('');\n  };\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <div className=\"add-todo\">\n        <input \n          value={newTodo}\n          onChange={e => setNewTodo(e.target.value)}\n          placeholder=\"Add new todo\"\n        />\n        <button onClick={addTodo}>Add</button>\n      </div>\n      <ul>\n        {todos.map(todo => (\n          <li key={todo.id}>\n            {todo.text}\n            <button onClick={() => removeTodo(todo.id)}>Ã—</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}",
      "timestamp": 0
    },
    {
      "type": "selection",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 10,
        "endLineNumber": 2,
        "endColumn": 15
      },
      "timestamp": 1000
    },
    {
      "type": "content",
      "text": "tasks",
      "timestamp": 2000
    },
    {
      "type": "selection",
      "selection": {
        "startLineNumber": 7,
        "startColumn": 13,
        "endLineNumber": 7,
        "endColumn": 18
      },
      "timestamp": 3000
    },
    {
      "type": "content",
      "text": "tasks",
      "timestamp": 4000
    },
    {
      "type": "selection",
      "selection": {
        "startLineNumber": 11,
        "startColumn": 13,
        "endLineNumber": 11,
        "endColumn": 18
      },
      "timestamp": 5000
    },
    {
      "type": "content",
      "text": "tasks",
      "timestamp": 6000
    }
  ]
}
